
package clients.async;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-b02-rc1
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AirportManager",
    targetNamespace = "http://server.jaxws.example.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AsyncAirportManager {

    /**
     * 
     * @param code
     * @param name
     * @return
     *     returns javax.xml.ws.Response<clients.async.AddAirportResponse>
     */
    @WebMethod(operationName = "addAirport")
    @RequestWrapper(localName = "addAirport", targetNamespace = "http://server.jaxws.example.com/", className = "clients.async.AddAirport")
    @ResponseWrapper(localName = "addAirportResponse", targetNamespace = "http://server.jaxws.example.com/", className = "clients.async.AddAirportResponse")
    public Response<AddAirportResponse> 
      addAirportAsync(String code, String name);

    /**
     * 
     * @param code
     * @param name
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "addAirport")
    @RequestWrapper(localName = "addAirport", targetNamespace = "http://server.jaxws.example.com/", className = "clients.async.AddAirport")
    @ResponseWrapper(localName = "addAirportResponse", targetNamespace = "http://server.jaxws.example.com/", className = "clients.async.AddAirportResponse")
    public Future<?> 
      addAirportAsync(String code, String name,
                      @WebParam(name = "asyncHandler")
                      AsyncHandler<AddAirportResponse> h);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAirport", targetNamespace = "http://server.jaxws.example.com/", className = "clients.async.AddAirport")
    @ResponseWrapper(localName = "addAirportResponse", targetNamespace = "http://server.jaxws.example.com/", className = "clients.async.AddAirportResponse")
    @Action(input = "http://server.jaxws.example.com/AirportManager/addAirportRequest", output = "http://server.jaxws.example.com/AirportManager/addAirportResponse")
    public long addAirport(String code,String name);

}
