
package labs.generated;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "UserManagerSvc", targetNamespace = "urn://Auction/", wsdlLocation = "file:/D:/labs/student/solutions/lab03/ex02/RPCWebServices/src/labs/UserManagerSvc.wsdl")
public class UserManagerSvc
    extends Service
{

    private final static URL USERMANAGERSVC_WSDL_LOCATION;
    private final static WebServiceException USERMANAGERSVC_EXCEPTION;
    private final static QName USERMANAGERSVC_QNAME = new QName("urn://Auction/", "UserManagerSvc");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/labs/student/solutions/lab03/ex02/RPCWebServices/src/labs/UserManagerSvc.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        USERMANAGERSVC_WSDL_LOCATION = url;
        USERMANAGERSVC_EXCEPTION = e;
    }

    public UserManagerSvc() {
        super(__getWsdlLocation(), USERMANAGERSVC_QNAME);
    }

    public UserManagerSvc(WebServiceFeature... features) {
        super(__getWsdlLocation(), USERMANAGERSVC_QNAME, features);
    }

    public UserManagerSvc(URL wsdlLocation) {
        super(wsdlLocation, USERMANAGERSVC_QNAME);
    }

    public UserManagerSvc(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, USERMANAGERSVC_QNAME, features);
    }

    public UserManagerSvc(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserManagerSvc(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns UserManager
     */
    @WebEndpoint(name = "UserManager")
    public UserManager getUserManager() {
        return super.getPort(new QName("urn://Auction/", "UserManager"), UserManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserManager
     */
    @WebEndpoint(name = "UserManager")
    public UserManager getUserManager(WebServiceFeature... features) {
        return super.getPort(new QName("urn://Auction/", "UserManager"), UserManager.class, features);
    }

    private static URL __getWsdlLocation() {
        if (USERMANAGERSVC_EXCEPTION!= null) {
            throw USERMANAGERSVC_EXCEPTION;
        }
        return USERMANAGERSVC_WSDL_LOCATION;
    }

}
